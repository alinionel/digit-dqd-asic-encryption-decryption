import java.io.File;
import java.io.IOException;
import java.nio.file.Files;

/**
 * @author s4dad\potolal
 */
public class DecryptionRunner {

    /* ---- Constants ---- */


    /* ---- Instance Variables ---- */


    /* ---- Constructors ---- */


    /* ---- Business methods ---- */

    public static void main(String[] args) throws IOException {

        File file = new File(Thread.currentThread().getContextClassLoader().getResource("").getPath() + "6a03f80e-7a1a-47f7-9bdd-58d9a3ee49a2");
         byte[] fileContent = Files.readAllBytes(file.toPath());

        DecryptionService decryptionService = new DecryptionService();

        String decryptedContent = decryptionService.validateAndDecrypt(fileContent);

//        String decryptedContent = decryptionService.validateAndDecrypt("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");
//        String decryptedContent = decryptionService.validateAndDecrypt(fileContent);
        System.out.println(String.format("DECRYPTED CONTENT: %s", decryptedContent));

    }


    /* ---- Getters and Setters ---- */
}
